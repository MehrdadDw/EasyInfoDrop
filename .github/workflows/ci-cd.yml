name: CI/CD Pipeline for EasyInfoDrop

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt5-qmake libqt5widgets5 libx11-dev cmake build-essential
      - name: Configure build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        run: |
          cd build
          make
      - name: Debug build output
        run: |
          ls -l build/EasyInfoDrop
      - uses: actions/upload-artifact@v4
        with:
          name: EasyInfoDrop-Ubuntu
          path: build/EasyInfoDrop
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          brew install qt@5 cmake
          echo "Qt5_DIR=$(brew --prefix qt@5)/lib/cmake/Qt5" >> $GITHUB_ENV
      - name: Configure build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DQt5_DIR=${{ env.Qt5_DIR }} ..
      - name: Build
        run: |
          cd build
          make
      - name: Bundle application
        run: |
          cd build
          $(brew --prefix qt@5)/bin/macdeployqt EasyInfoDrop.app
          ditto -c -k --sequesterRsrc --keepParent EasyInfoDrop.app EasyInfoDrop-${{ github.ref_name }}-macOS.zip
      - name: Debug build output
        run: |
          ls -lR build/EasyInfoDrop.app
          ls -l build/EasyInfoDrop-${{ github.ref_name }}-macOS.zip
      - uses: actions/upload-artifact@v4
        with:
          name: EasyInfoDrop-macOS
          path: build/EasyInfoDrop-${{ github.ref_name }}-macOS.zip
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
      - name: Install CMake
        uses: lukka/get-cmake@v3.29.3
      - name: Configure build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="/EHsc" ..
        shell: cmd
      - name: Build
        run: |
          cd build
          cmake --build . --config Release
        shell: cmd
      - name: Bundle application
        run: |
          cd build
          %Qt5_DIR%\bin\windeployqt Release\EasyInfoDrop.exe
          powershell -Command "Compress-Archive -Path Release\EasyInfoDrop.exe,Release\*.dll -DestinationPath EasyInfoDrop-${{ github.ref_name }}-Windows.zip"
        shell: cmd
      - name: Debug build output
        run: |
          dir build\Release
          dir build\EasyInfoDrop-${{ github.ref_name }}-Windows.zip
        shell: cmd
      - uses: actions/upload-artifact@v4
        with:
          name: EasyInfoDrop-Windows
          path: build/EasyInfoDrop-${{ github.ref_name }}-Windows.zip
          if-no-files-found: error

  release:
    needs: [build-ubuntu, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: EasyInfoDrop-Ubuntu
          path: release/ubuntu
      - uses: actions/download-artifact@v4
        with:
          name: EasyInfoDrop-macOS
          path: release/macos
      - uses: actions/download-artifact@v4
        with:
          name: EasyInfoDrop-Windows
          path: release/windows
      - name: Debug file structure
        run: |
          ls -R release
          echo "Checking downloaded artifacts:"
          find release -type f
      - name: Create Ubuntu tarball
        run: |
          chmod +x release/ubuntu/EasyInfoDrop
          tar -czvf release/release-easy-info-drop-${{ github.ref_name }}-ubuntu.tar.gz -C release/ubuntu EasyInfoDrop
          echo "Ubuntu tarball contents:"
          tar -tzvf release/release-easy-info-drop-${{ github.ref_name }}-ubuntu.tar.gz
      - name: Create and upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release/release-easy-info-drop-${{ github.ref_name }}-ubuntu.tar.gz
            release/macos/EasyInfoDrop-${{ github.ref_name }}-macOS.zip
            release/windows/EasyInfoDrop-${{ github.ref_name }}-Windows.zip
          body: |
            EasyInfoDrop Release ${{ github.ref_name }}

            **Ubuntu**:
            ```bash
            tar -xzvf release-easy-info-drop-${{ github.ref_name }}-ubuntu.tar.gz
            chmod +x EasyInfoDrop
            ./EasyInfoDrop
            ```

            **macOS**:
            ```bash
            unzip EasyInfoDrop-${{ github.ref_name }}-macOS.zip
            open EasyInfoDrop.app
            ```

            **Windows**:
            ```powershell
            Expand-Archive -Path EasyInfoDrop-${{ github.ref_name }}-Windows.zip -DestinationPath .
            .\EasyInfoDrop.exe
            ```

            **Note**: Drag-to-paste functionality is disabled on macOS and Windows due to platform limitations. Use click-to-copy instead.

            Includes `config/config.json` for immediate use.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
